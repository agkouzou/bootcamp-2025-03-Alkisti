import Head from "next/head";
import { useEffect, useState } from "react";
import axios from "axios";
import { useRouter } from "next/router";

export default function LoginPage() {
    const router = useRouter();

    const [email, setEmail] = useState("");
    const [password, setPassword] = useState("");
    const [loading, setLoading] = useState(false);
    const [message, setMessage] = useState("");

    const [signupName, setSignupName] = useState("");
    const [signupEmail, setSignupEmail] = useState("");
    const [signupPassword, setSignupPassword] = useState("");
    const [signupConfirm, setSignupConfirm] = useState("");
    const [signupLoading, setSignupLoading] = useState(false);
    const [signupMessage, setSignupMessage] = useState(null);

    useEffect(() => {
        const authToken = localStorage.getItem("authToken");
        if (authToken) {
            window.location.href = "/chat";
        }

        const { token } = router.query;
        if (token) {
            axios
                .get(`http://localhost:8080/users/verify?token=${token}`)
                .then(() => {
                    setMessage("Email successfully verified! You can now log in.");
                    setTimeout(() => {
                        router.push("/login");
                    }, 2000);
                })
                .catch(() => {
                    alert("Verification failed. Please try again.");
                });
        }
    }, [router.query]);

    function handleEmailChange(e) {
        setEmail(e.target.value);
    }

    function handlePasswordChange(e) {
        setPassword(e.target.value);
    }

    async function handleLogin(e) {
        e.preventDefault();
        setMessage("");
        setLoading(true);

        if (!email || !password) {
            setMessage("Please enter email and password.");
            setLoading(false);
            return;
        }

        const credentials = btoa(`${email}:${password}`);

        try {
            const response = await axios.post(
                "http://localhost:8080/users/login",
                {},
                {
                    headers: {
                        Authorization: `Basic ${credentials}`,
                        "Content-Type": "application/json",
                    },
                }
            );

            localStorage.setItem("authToken", response.data.token);
            window.location.href = "/chat";
        } catch {
            setMessage("Login failed. Please check your email and password.");
            setEmail("");
            setPassword("");
            setLoading(false);
        }
    }

    function handleSignupNameChange(e) {
        setSignupName(e.target.value);
    }

    function handleSignupEmailChange(e) {
        setSignupEmail(e.target.value);
    }

    function handleSignupPasswordChange(e) {
        setSignupPassword(e.target.value);
    }

    function handleSignupConfirmChange(e) {
        setSignupConfirm(e.target.value);
    }

    async function handleSignup(e) {
        e.preventDefault();
        setSignupLoading(true);

        if (!signupName || !signupEmail || !signupPassword || !signupConfirm) {
            setSignupMessage("Please fill in all signup fields.");
            setSignupLoading(false);
            return;
        }

        if (signupPassword !== signupConfirm) {
            setSignupMessage("Passwords do not match.");
            setSignupLoading(false);
            return;
        }

        try {
            await axios.post("http://localhost:8080/users", {
                name: signupName,
                email: signupEmail,
                password: signupPassword,
            });

            setSignupMessage(
                <>
                    Account created! Please check your inbox to verify your email.
                    <br />
                    You’ll be redirected to the login page shortly...
                </>
            );

            setSignupName("");
            setSignupEmail("");
            setSignupPassword("");
            setSignupConfirm("");
            setSignupLoading(false);

            setTimeout(() => {
                window.location.href = "/login";
            }, 3000);
        } catch {
            setSignupMessage("Signup failed. Try again.");
            setSignupLoading(false);
        }
    }

    return (
        <>
            <Head>
                <title>Create Next App</title>
                <meta name="description" content="Generated by create next app" />
                <meta name="viewport" content="width=device-width, initial-scale=1" />
                <link rel="icon" href="/favicon.ico" />
            </Head>

            <div className="page-container">
                <header>
                    <div className="header-content">
                        <div className="header-brand">
                            <img
                                src="./bootcamp-2025.03-logo.jpg"
                                alt="Logo"
                                className="header-logo"
                            />
                            <div className="header-title">Chat Application</div>
                        </div>
                    </div>
                </header>

                <div className="content">
                    <div className="tab-container">
                        <input type="radio" id="tab-login" name="tab" defaultChecked />
                        <input type="radio" id="tab-signup" name="tab" />
                        <div className="tabs">
                            <label htmlFor="tab-login">Login</label>
                            <label htmlFor="tab-signup">Sign Up</label>
                        </div>

                        <section className="form-section login">
                            <form onSubmit={handleLogin}>
                                <div className="form-group">
                                    <label htmlFor="login-email">Email</label>
                                    <input
                                        type="email"
                                        id="login-email"
                                        placeholder="you@example.com"
                                        value={email}
                                        onChange={handleEmailChange}
                                        required
                                    />
                                </div>
                                <div className="form-group">
                                    <label htmlFor="login-password">Password</label>
                                    <input
                                        type="password"
                                        id="login-password"
                                        placeholder="••••••••"
                                        value={password}
                                        onChange={handlePasswordChange}
                                        required
                                    />
                                </div>
                                <div className="form-actions">
                                    <button
                                        type="submit"
                                        className="btn btn-primary"
                                        disabled={loading}
                                    >
                                        {loading ? "Signing in..." : "Sign In"}
                                    </button>
                                    <label htmlFor="tab-signup" className="btn btn-link">
                                        Create Account
                                    </label>
                                </div>
                                {message && !loading && (
                                    <div style={{ marginTop: "10px", fontSize: "14px" }}>{message}</div>
                                )}
                                <div className="form-actions" style={{ marginTop: "10px" }}>
                                    <a href="/forgot-password" className="btn btn-link">
                                        Forgot Password?
                                    </a>
                                </div>
                            </form>
                        </section>

                        <section className="form-section signup">
                            <form onSubmit={handleSignup}>
                                <div className="form-group">
                                    <label htmlFor="signup-name">Name</label>
                                    <input
                                        type="text"
                                        id="signup-name"
                                        placeholder="John Doe"
                                        value={signupName}
                                        onChange={handleSignupNameChange}
                                        required
                                    />
                                </div>
                                <div className="form-group">
                                    <label htmlFor="signup-email">Email</label>
                                    <input
                                        type="email"
                                        id="signup-email"
                                        placeholder="you@example.com"
                                        value={signupEmail}
                                        onChange={handleSignupEmailChange}
                                        required
                                    />
                                </div>
                                <div className="form-group">
                                    <label htmlFor="signup-password">Password</label>
                                    <input
                                        type="password"
                                        id="signup-password"
                                        placeholder="••••••••"
                                        value={signupPassword}
                                        onChange={handleSignupPasswordChange}
                                        required
                                    />
                                </div>
                                <div className="form-group">
                                    <label htmlFor="signup-confirm">Confirm Password</label>
                                    <input
                                        type="password"
                                        id="signup-confirm"
                                        placeholder="••••••••"
                                        value={signupConfirm}
                                        onChange={handleSignupConfirmChange}
                                        required
                                    />
                                </div>
                                <div className="form-actions">
                                    <label htmlFor="tab-login" className="btn btn-link">
                                        Sign In
                                    </label>
                                    <button
                                        type="submit"
                                        className="btn btn-primary"
                                        disabled={signupLoading}
                                    >
                                        {signupLoading ? "Signing up..." : "Create Account"}
                                    </button>
                                </div>
                                {signupMessage && !signupLoading && (
                                    <div style={{ marginTop: "10px", fontSize: "14px" }}>{signupMessage}</div>
                                )}
                            </form>
                        </section>
                    </div>
                </div>

                <footer>© 2025 Chat App, Inc.</footer>
            </div>
        </>
    );
}